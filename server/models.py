from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash

db = SQLAlchemy()


class Taxonomies(db.Model):
    __tablename__ = "taxonomy"
    id = db.Column(db.Integer, autoincrement=True)
    phylum = db.Column(db.String(255), nullable=False)
    phylum_detail = db.Column(db.String(255), nullable=False)
    phylum_image = db.Column(db.String(255), nullable=False)
    phylum_cites = db.Column(db.String(255), nullable=False)
    classes = db.Column(db.String(255), nullable=False)
    classes_detail = db.Column(db.String(255), nullable=False)
    classes_image = db.Column(db.String(255), nullable=False)
    classes_cites = db.Column(db.String(255), nullable=False)
    order = db.Column(db.String(255), nullable=False)
    order_detail = db.Column(db.String(255), nullable=False)
    order_image = db.Column(db.String(255), nullable=False)
    order_cites = db.Column(db.String(255), nullable=False)
    family = db.Column(db.String(255), nullable=False)
    family_detail = db.Column(db.String(255), nullable=False)
    family_image = db.Column(db.String(255), nullable=False)
    family_cites = db.Column(db.String(255), nullable=False)
    genus = db.Column(db.String(255), nullable=False)
    genus_detail = db.Column(db.String(255), nullable=False)
    genus_image = db.Column(db.String(255), nullable=False)
    genus_cites = db.Column(db.String(255), nullable=False)
    latinname = db.Column(db.String(255), primary_key=True, nullable=False)
    author = db.Column(db.String(255), nullable=False)
    collector = db.Column(db.String(255), nullable=False)
    translator = db.Column(db.String(255), nullable=False)
    image = db.Column(db.String(255), nullable=False)
    common_name = db.Column(db.String(255), nullable=True)
    synonyms = db.Column(db.String(255), nullable=True)
    description = db.Column(db.String(255), nullable=True)
    characteristics = db.Column(db.String(255), nullable=True)
    habit = db.Column(db.String(255), nullable=True)
    distribution = db.Column(db.String(255), nullable=True)
    ref_original = db.Column(db.String(255), nullable=True)
    ref_additional = db.Column(db.String(255), nullable=True)
    ref_redescription = db.Column(db.String(255), nullable=True)
    iucn = db.Column(db.String(255), nullable=True)
    cites = db.Column(db.String(255), nullable=True)
    protection = db.Column(db.String(255), nullable=True)
    threats = db.Column(db.String(255), nullable=True)
    dna_sp1_species = db.Column(db.String(255), nullable=True)
    dna_sp1_voucher = db.Column(db.String(255), nullable=True)
    dna_sp1_type = db.Column(db.String(255), nullable=True)
    dna_sp1_deposited = db.Column(db.String(255), nullable=True)
    dna_sp1_location = db.Column(db.String(255), nullable=True)
    dna_sp1_coordinates = db.Column(db.String(255), nullable=True)
    dna_sp1_isolation = db.Column(db.String(255), nullable=True)
    dna_sp1_date = db.Column(db.String(255), nullable=True)
    dna_sp1_collector = db.Column(db.String(255), nullable=True)
    dna_sp1_identifier = db.Column(db.String(255), nullable=True)
    dna_sp1_email = db.Column(db.String(255), nullable=True)
    dna_sp1_coi_nuc = db.Column(db.String(255), nullable=True)
    dna_sp1_coi_aa = db.Column(db.String(255), nullable=True)
    dna_sp1_coi_codon = db.Column(db.String(255), nullable=True)
    dna_sp1_coi_info = db.Column(db.String(255), nullable=True)
    dna_sp1_16s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp1_16s_info = db.Column(db.String(255), nullable=True)
    dna_sp1_18s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp1_18s_info = db.Column(db.String(255), nullable=True)
    dna_sp1_28s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp1_28s_info = db.Column(db.String(255), nullable=True)
    dna_sp1_h3_nuc = db.Column(db.String(255), nullable=True)
    dna_sp1_h3_info = db.Column(db.String(255), nullable=True)
    dna_sp1_fasta = db.Column(db.String(255), nullable=True)
    dna_sp2_species = db.Column(db.String(255), nullable=True)
    dna_sp2_voucher = db.Column(db.String(255), nullable=True)
    dna_sp2_type = db.Column(db.String(255), nullable=True)
    dna_sp2_deposited = db.Column(db.String(255), nullable=True)
    dna_sp2_location = db.Column(db.String(255), nullable=True)
    dna_sp2_coordinates = db.Column(db.String(255), nullable=True)
    dna_sp2_isolation = db.Column(db.String(255), nullable=True)
    dna_sp2_date = db.Column(db.String(255), nullable=True)
    dna_sp2_collector = db.Column(db.String(255), nullable=True)
    dna_sp2_identifier = db.Column(db.String(255), nullable=True)
    dna_sp2_email = db.Column(db.String(255), nullable=True)
    dna_sp2_coi_nuc = db.Column(db.String(255), nullable=True)
    dna_sp2_coi_aa = db.Column(db.String(255), nullable=True)
    dna_sp2_coi_codon = db.Column(db.String(255), nullable=True)
    dna_sp2_coi_info = db.Column(db.String(255), nullable=True)
    dna_sp2_16s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp2_16s_info = db.Column(db.String(255), nullable=True)
    dna_sp2_18s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp2_18s_info = db.Column(db.String(255), nullable=True)
    dna_sp2_28s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp2_28s_info = db.Column(db.String(255), nullable=True)
    dna_sp2_h3_nuc = db.Column(db.String(255), nullable=True)
    dna_sp2_h3_info = db.Column(db.String(255), nullable=True)
    dna_sp2_fasta = db.Column(db.String(255), nullable=True)
    dna_sp3_species = db.Column(db.String(255), nullable=True)
    dna_sp3_voucher = db.Column(db.String(255), nullable=True)
    dna_sp3_type = db.Column(db.String(255), nullable=True)
    dna_sp3_deposited = db.Column(db.String(255), nullable=True)
    dna_sp3_location = db.Column(db.String(255), nullable=True)
    dna_sp3_coordinates = db.Column(db.String(255), nullable=True)
    dna_sp3_isolation = db.Column(db.String(255), nullable=True)
    dna_sp3_date = db.Column(db.String(255), nullable=True)
    dna_sp3_collector = db.Column(db.String(255), nullable=True)
    dna_sp3_identifier = db.Column(db.String(255), nullable=True)
    dna_sp3_email = db.Column(db.String(255), nullable=True)
    dna_sp3_coi_nuc = db.Column(db.String(255), nullable=True)
    dna_sp3_coi_aa = db.Column(db.String(255), nullable=True)
    dna_sp3_coi_codon = db.Column(db.String(255), nullable=True)
    dna_sp3_coi_info = db.Column(db.String(255), nullable=True)
    dna_sp3_16s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp3_16s_info = db.Column(db.String(255), nullable=True)
    dna_sp3_18s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp3_18s_info = db.Column(db.String(255), nullable=True)
    dna_sp3_28s_nuc = db.Column(db.String(255), nullable=True)
    dna_sp3_28s_info = db.Column(db.String(255), nullable=True)
    dna_sp3_h3_nuc = db.Column(db.String(255), nullable=True)
    dna_sp3_h3_info = db.Column(db.String(255), nullable=True)
    dna_sp3_fasta = db.Column(db.String(255), nullable=True)
    mit_species = db.Column(db.String(255), nullable=True)
    mit_voucher = db.Column(db.String(255), nullable=True)
    mit_type = db.Column(db.String(255), nullable=True)
    mit_deposited = db.Column(db.String(255), nullable=True)
    mit_location = db.Column(db.String(255), nullable=True)
    mit_coordinates = db.Column(db.String(255), nullable=True)
    mit_isolation = db.Column(db.String(255), nullable=True)
    mit_depth = db.Column(db.String(255), nullable=True)
    mit_date = db.Column(db.String(255), nullable=True)
    mit_collector = db.Column(db.String(255), nullable=True)
    mit_identifier = db.Column(db.String(255), nullable=True)
    mit_info = db.Column(db.String(255), nullable=True)
    mit_seq = db.Column(db.String(255), nullable=True)
    mit_diagram = db.Column(db.String(255), nullable=True)
    mit_cds = db.Column(db.String(255), nullable=True)
    mit_fasta = db.Column(db.String(255), nullable=True)
    mit_gbf = db.Column(db.String(255), nullable=True)
    mit_pdf = db.Column(db.String(255), nullable=True)


class User(db.Model):
    __tablename__ = "user"
    email = db.Column(db.String(255), nullable=False, primary_key=True, unique=True)
    username = db.Column(db.String(255), nullable=False)
    password_hash = db.Column(db.String(255), nullable=False)

    # 1.function
    # def generate_password_hash(self, origin_password):
    #   self.password_hash = generate_password_hash(origin_password)

    # 2.property
    @property
    def hash_password(self):
        return ""

    @hash_password.setter
    def hash_password(self, origin_password):
        self.password_hash = generate_password_hash(origin_password)

    def check_password_hash(self, query_password):
        return check_password_hash(self.password_hash, query_password)
